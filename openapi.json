{
  "openapi": "3.1.0",
  "info": { "title": "FastAPI", "version": "0.1.0" },
  "paths": {
    "/secret/": {
      "post": {
        "tags": ["secret"],
        "summary": "Create Secret",
        "operationId": "create_secret_secret__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateSecretPayload" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SecretDTO" }
              }
            }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/secret/{secret_id}": {
      "get": {
        "tags": ["secret"],
        "summary": "Get Secret",
        "operationId": "get_secret_secret__secret_id__get",
        "parameters": [
          {
            "name": "secret_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Secret Id" }
          },
          {
            "name": "meta",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean", "default": false, "title": "Meta" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SecretDTO" }
              }
            }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["secret"],
        "summary": "Invalidate Secret",
        "operationId": "invalidate_secret_secret__secret_id__delete",
        "parameters": [
          {
            "name": "secret_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Secret Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Invalidate Secret Secret  Secret Id  Delete"
                }
              }
            }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/secret/{secret_id}/info": {
      "get": {
        "tags": ["secret"],
        "summary": "Get Secret Info",
        "operationId": "get_secret_info_secret__secret_id__info_get",
        "parameters": [
          {
            "name": "secret_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Secret Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MetadataDTO" }
              }
            }
          },
          "404": { "description": "Not found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/meta/update/{secret_id}": {
      "put": {
        "summary": "Update Secret Meta",
        "operationId": "update_secret_meta_meta_update__secret_id__put",
        "parameters": [
          {
            "name": "secret_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Secret Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateSecretPayload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Update Secret Meta Meta Update  Secret Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateSecretPayload": {
        "properties": {
          "secret": {
            "type": "string",
            "maxLength": 3000,
            "minLength": 1,
            "title": "Secret"
          },
          "metadata": {
            "anyOf": [
              { "$ref": "#/components/schemas/MetadataDTO" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "required": ["secret"],
        "title": "CreateSecretPayload"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "MetadataDTO": {
        "properties": {
          "created_at": { "type": "string", "title": "Created At" },
          "updated_at": { "type": "string", "title": "Updated At" },
          "is_active": { "type": "boolean", "title": "Is Active" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description",
            "default": ""
          }
        },
        "type": "object",
        "required": ["created_at", "updated_at", "is_active"],
        "title": "MetadataDTO"
      },
      "SecretDTO": {
        "properties": {
          "secret_id": { "type": "string", "title": "Secret Id" },
          "value": { "type": "string", "title": "Value" },
          "version": { "$ref": "#/components/schemas/VersionDTO" },
          "description": { "type": "string", "title": "Description" },
          "metadata": {
            "anyOf": [
              { "$ref": "#/components/schemas/MetadataDTO" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "required": ["secret_id", "value", "version", "description"],
        "title": "SecretDTO"
      },
      "UpdateSecretPayload": {
        "properties": { "secret": { "type": "string", "title": "Secret" } },
        "type": "object",
        "required": ["secret"],
        "title": "UpdateSecretPayload"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "VersionDTO": {
        "properties": {
          "version_number": { "type": "integer", "title": "Version Number" },
          "last_modified": { "type": "string", "title": "Last Modified" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["version_number", "last_modified", "description"],
        "title": "VersionDTO"
      }
    }
  }
}
