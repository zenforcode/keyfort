meta {
  name: createSecret
  type: http
  seq: 1
}

post {
  url: http://127.0.0.1:8000/secret
  body: json
  auth: none
}

body:json {
  {
    "secret": "Super secret value"
  }
}

body:text {
  "Super secret value"
}

tests {
  test("createSecret should handle a valid request", () => {
      expect(res.getStatus()).to.equal(200);
    });
    
    
    test("createSecret should return expected keys", () => {
      const data = res.getBody();
      bru.setEnvVar("id", data.id);
      
      expect(data).to.have.property("metadata");
      const metadata = data.metadata;
      
      expect(data).to.have.property("id");
      expect(data).to.have.property("value").equal(req.body.secret);
      expect(metadata).to.have.property("is_active").equal(true);
      expect(metadata).to.have.property("created_at");
      expect(metadata).to.have.property("updated_at");
    });
    
    
    test("createSecret should return expected values", () => {
      const data = res.getBody();
      const metadata = data.metadata;
      
      expect(data).to.have.property("value").equal(req.body.secret);
      expect(metadata).to.have.property("is_active").equal(true);
      expect(metadata).to.have.property("updated_at").equal(null);
    });
}
