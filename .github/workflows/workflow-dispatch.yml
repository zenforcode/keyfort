name: Workflow Dispatch with Version
on:
  workflow_dispatch:
    inputs:
      version:
        description: Version number (e.g., v1.0.0)
        required: true
        default: v1.0.0
jobs:
  versioning:
    permissions:
      contents: write  
      actions: read 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Validate version
        env: 
          VERSION: ${{ github.event.inputs.version }}
        run: |
          if [[ ! "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format. Expected format: vX.Y.Z (e.g., v1.0.0)"
            exit 1
          fi
      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
      # - name: Create and Push Git Tag
      #   env:
      #     RELEASE_VERSION: ${{ github.event.inputs.version }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     echo "Tagging version: $RELEASE_VERSION"
      #     git tag -a "$RELEASE_VERSION" -m "Release $RELEASE_VERSION"
      #     git push origin "$RELEASE_VERSION"

      - name: Install UV
        uses: astral-sh/setup-uv@v5.2.1
          
      - name: Build 
        run: |
          make build && ls -l

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_VERSION: ${{ github.event.inputs.version }}
        with:
          tag_name: "$RELEASE_VERSION"
          release_name: "Release ${RELEASE_VERSION}"
          draft: false
          prerelease: false
          
      - name: Upload to GitHub Release
        env:
          RELEASE_VERSION: ${{ github.event.inputs.version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*.whl
          asset_name: "keyfort-${RELEASE_VERSION}.whl"
          asset_content_type: application/octet-stream
          
